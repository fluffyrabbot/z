#!/bin/bash
# ZChat Offline Installer v0.8b
# Downloads and caches all dependencies for offline installation

set -e

# Source progress utilities
if [ -f "./progress-utils.sh" ]; then
    source ./progress-utils.sh
elif [ -f "./install/progress-utils.sh" ]; then
    source ./install/progress-utils.sh
else
    echo "Warning: progress-utils.sh not found, using basic progress"
    # Fallback colors and functions
    RED='\033[0;31m'
    GREEN='\033[0;32m'
    YELLOW='\033[1;33m'
    BLUE='\033[0;34m'
    LIGHT_BLUE='\033[0;36m'
    NC='\033[0m'
    
    show_progress_bar() {
        local current=$1
        local total=$2
        local desc=$3
        local percent=$((current * 100 / total))
        local filled=$((percent / 2))
        local empty=$((50 - filled))
        printf "\r[%3d%%] [" $percent
        printf "%*s" $filled | tr ' ' '#'
        printf "%*s" $empty | tr ' ' '-'
        printf "] %s (%d/%d)" "$desc" $current $total
    }
fi

# Configuration
CACHE_DIR="$HOME/.zchat/cache"
MODULES_CACHE="$CACHE_DIR/modules"
CPAN_CACHE="$CACHE_DIR/cpan"

echo -e "${BLUE}ZChat Offline Installer${NC}"
echo ""

# Create cache directories
mkdir -p "$MODULES_CACHE"
mkdir -p "$CPAN_CACHE"

# Download all required modules
download_modules() {
    echo -e "${YELLOW}Downloading Perl modules for offline installation...${NC}"
    
    # Source dependencies
    if [ -f "./install/install-common.sh" ]; then
        source ./install/install-common.sh
    elif [ -f "./install-common.sh" ]; then
        source ./install-common.sh
        modules=($(export_all_modules))
    else
        modules=(
            "Mojo::UserAgent"
            "JSON::XS"
            "YAML::XS"
            "Text::Xslate"
            # "Clipboard" # Replaced with custom clipboard function
            "Image::Magick"
            "String::ShellQuote"
            "Getopt::Long::Descriptive"
            "URI::Escape"
            "Data::Dumper"
            "File::Slurper"
            "File::Copy"
            "File::Temp"
            "File::Compare"
            "Carp"
            "Term::ReadLine"
            "Term::ReadLine::Gnu"
            "Capture::Tiny"
            "LWP::UserAgent"
            "Term::Size"
        )
    fi
    
    total_modules=${#modules[@]}
    current_module=0
    start_time=$(date +%s)
    
    for module in "${modules[@]}"; do
        current_module=$((current_module + 1))
        show_progress_bar $current_module $total_modules "Downloading $module" $start_time
        
        # Download module and dependencies
        if cpanm --scandeps --save-dists="$MODULES_CACHE" "$module" >/dev/null 2>&1; then
            show_enhanced_progress $current_module $total_modules "$module" "success" $start_time
        else
            show_enhanced_progress $current_module $total_modules "$module" "failed" $start_time
            echo -e "${RED}Failed to download $module${NC}"
        fi
    done
    
    echo ""
    echo -e "${GREEN}✓ Module download complete${NC}"
    echo "Cache location: $MODULES_CACHE"
}

# Create offline installation script
create_offline_installer() {
    echo -e "${YELLOW}Creating offline installation script...${NC}"
    
    cat > "$CACHE_DIR/install-offline.sh" << 'EOF'
#!/bin/bash
# Offline ZChat Installation Script
# Generated by offline-installer.sh

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}ZChat Offline Installation${NC}"
echo ""

# Check if cache exists
if [ ! -d "$HOME/.zchat/cache/modules" ]; then
    echo -e "${RED}Error: Module cache not found${NC}"
    echo "Please run ./offline-installer.sh first to download dependencies"
    exit 1
fi

# Install from cache
echo -e "${YELLOW}Installing from cached modules...${NC}"
cpanm --from "$HOME/.zchat/cache/modules" --notest --quiet Mojo::UserAgent JSON::XS YAML::XS Text::Xslate

echo -e "${GREEN}✓ Offline installation complete${NC}"
EOF
    
    chmod +x "$CACHE_DIR/install-offline.sh"
    echo -e "${GREEN}✓ Offline installer created: $CACHE_DIR/install-offline.sh${NC}"
}

# Main execution
if [ "$1" = "--download" ]; then
    download_modules
elif [ "$1" = "--create-installer" ]; then
    create_offline_installer
else
    echo "Usage: $0 [--download|--create-installer]"
    echo ""
    echo "  --download         Download all dependencies to cache"
    echo "  --create-installer Create offline installation script"
    echo ""
    echo "Example workflow:"
    echo "  1. Run with internet: ./offline-installer.sh --download"
    echo "  2. Copy cache to offline machine"
    echo "  3. Run offline: ./offline-installer.sh --create-installer"
    echo "  4. Install: ~/.zchat/cache/install-offline.sh"
fi